-- Single Row Functions
SELECT CONCAT('My name is: ', ENAME) AS NAME
FROM EMP;

SELECT upper('hello')
FROM DUAL; -- single record, used to test functions

SELECT lower(ENAME)
FROM EMP;

SELECT CONCAT(CONCAT(CONCAT(lower(ename), upper(' is their name')), lower(' and their job is: ')), upper(JOB)) AS SOL
FROM EMP;

SELECT INITCAP('hello world')
FROM DUAL;

SELECT LENGTH(ENAME) AS LENGTH
FROM EMP;

SELECT SUBSTR('HELLO', 2, 2)
FROM DUAL;

SELECT 'HELLO MY NAME IS', SUBSTR('HELLO MY NAME IS', 3)
FROM DUAL;

SELECT LPAD('DAY', 6, '$') -- add padding to the left of the first argument
FROM DUAL;
-- output: $$$DAY

SELECT ROUND(12.12876, 2)
FROM DUAL;

SELECT ROUND(12.12876)
FROM DUAL;

SELECT TRUNC(12.12876,2)
FROM DUAL;

SELECT SYSDATE
FROM DUAL;

SELECT SYSTIMESTAMP
FROM DUAL;

SELECT ADD_MONTHS(SYSDATE, 8)
FROM DUAL;

SELECT ADD_MONTHS('01/16/2019', 8)
FROM DUAL;

SELECT MONTHS_BETWEEN(SYSDATE, '11/16/2018')
FROM DUAL;

SELECT ename, hiredate, TRUNC(hiredate, 'MONTH')
FROM EMP;

SELECT ename, hiredate, TRUNC(hiredate, 'MONTH')
FROM EMP
WHERE TRUNC(hiredate, 'YEAR') = '01/01/1981'

SELECT TO_CHAR(SYSDATE, 'Month DD, YYYY') -- use to display information in a set format
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'Month DD, YYYY') -- use to display information in a set format
FROM DUAL;

SELECT TO_CHAR(SAL, '$999,999.00')
FROM EMP;

SELECT TO_DATE('2012-08-27', 'YYYY-MM-DD') --convert string to a date format
FROM DUAL;

SELECT TO_DATE('3 OF JUNE, 2008', 'DD "OF" MM, YYYY') --convert string to a date format
FROM DUAL;

LAST_DAY(d)
last_day is a date function that requires a date as an argument. It returns the last day of the month in which the given date falls. The argument is required for this function to work properly.

NEXT_DAY(d, c)
The first argument is the date and the second argument is a text reference to a day of the week. Both arguments are required for this function to work properly. This function returns a valid date representing the first occurrence of the c day following the date represented in d. 

SELECT ENAME, JOB, SAL, NVL(TO_CHAR(COMM), 'NO DATA PRESENT') AS COMM -- Replace NaNs
FROM EMP;

SELECT ENAME, LENGTH(ENAME), NVL(TO_CHAR(NULLIF(LENGTH(ENAME), 5)), 'LENGTH IS 5')
FROM EMP
WHERE SAL > 2000;

CONCAT(​CONCAT(LEFT(upper(ENAME), 1)​, '-'), RIGHT(upper(ENAME)​, 3)​) 
