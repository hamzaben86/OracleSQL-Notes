-- Multi-Table Queries and Joints

SELECT *
FROM DEPT
WHERE DEPTNO = 
( SELECT DEPTNO 
  FROM DEPT
  WHERE DEPTNO = 30 ) -- The nested command (between brackets is run first)

SELECT *
FROM DEPT
WHERE DEPTNO < 
( SELECT DEPTNO 
  FROM DEPT
  WHERE DEPTNO = 30 )

SELECT *
FROM EMP
WHERE DEPTNO = 
  (SELECT DEPTNO
   FROM DEPT
   WHERE LOC = 'CHICAGO')

-- If you need multiple rows returned in the sub-query, use IN
SELECT *
FROM EMP
WHERE DEPTNO IN
	(SELECT DEPTNO
	 FROM DEPT
	  WHERE DEPTNO IN (10,20))

-- JOINS
SELECT *
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO

SELECT ENAME, JOB, SAL
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
AND DEPT.LOC = 'DALLAS'

SELECT EMP.ENAME, EMP.JOB, EMP.SAL, DEPT.DEPTNO
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
AND EMP.DEPTNO = 20

SELECT e.ENAME AS FIRST_NAME, e.JOB AS JOB_TITLE, e.SAL AS SALARY, d.DEPTNO AS DEPT_NUMBER -- using aliases
FROM EMP e, DEPT d 
WHERE e.DEPTNO = d.DEPTNO
AND d.DEPTNO = 20

SELECT e.ENAME AS FIRST_NAME, e.JOB AS JOB_TITLE, e.SAL AS SALARY, d.DEPTNO AS DEPT_NUMBER
FROM (SELECT * FROM EMP WHERE JOB IN ('MANAGER', 'CLERK')) e, (SELECT * FROM DEPT) d -- using subqueries in the FROM clause
WHERE e.DEPTNO = d.DEPTNO
AND d.DEPTNO = 20

-- INNER JOIN
SELECT *
FROM EMP INNER JOIN DEPT
ON emp.deptno = dept.deptno

SELECT *
FROM EMP LEFT JOIN DEPT
ON emp.deptno = dept.deptno

SELECT *
FROM EMP RIGHT JOIN DEPT
ON emp.deptno = dept.deptno

SELECT *
FROM EMP FULL OUTER JOIN DEPT
ON emp.deptno = dept.deptno

e.* -- return all columns in table e

-- WHERE EXISTS clause -- Not very efficient and slow
SELECT *
FROM EMP
WHERE EXISTS (SELECT * FROM EMP WHERE JOB='MANAGER') -- Condition met if EXISTS query returns some data

SELECT *
FROM EMP
WHERE NOT EXISTS (SELECT * FROM EMP WHERE JOB='PROGRAMMER')

SELECT d.*
FROM dept d
WHERE EXISTS (SELECT * FROM emp WHERE d.deptno = emp.deptno)

SELECT d.*
FROM dept d
WHERE NOT EXISTS (SELECT * FROM emp WHERE d.deptno = emp.deptno)

SELECT d.*
FROM dept d
WHERE NOT EXISTS (SELECT * FROM emp WHERE d.deptno = emp.deptno)
OR loc = 'CHICAGO'

-- UNION: Full Join without duplicates but commom columns must be included
SELECT * FROM table_1
UNION
SELECT * FROM table_2

-- UNION ALL: simply appends tables together
SELECT * FROM table_1
UNION ALL
SELECT * FROM table_2

-- MINUS: minuses the lower table from the upper table
SELECT * FROM table_1
MINUS
SELECT * FROM table_2

